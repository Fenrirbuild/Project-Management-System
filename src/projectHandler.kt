import java.util.*
import kotlin.collections.ArrayList

class projectHandler {

    // Each of the variables and array list

    val pers = persistence()
    var projectList = ArrayList<project>()
    var currentProject =
        project("There is no project Selected", projectdate = Date(), prjDescription = "There no project Selected")
init {
    loadingTheProject()
}
    fun createNewProject(projectName: String, projectDate: Date, projectDescription: String) {
        projectList.add(project(projectName, projectDate, prjDescription = projectDescription))
        println("Project List is printing")
        println(projectList)

        // the new project will be saved to the file generated by the system automatically

        savingNewProject()
    }

    private fun setTaskInProject(){
        Main.taskH.taskList = currentProject.taskList
        println("The added task is set into the current Project List:\n "+ Main.taskH.taskList)

    }
    fun removeProject(projectIndex: Int) : Boolean{

        return if(projectList[projectIndex]==currentProject){
            projectList.removeAt(projectIndex)
            savingNewProject()
            currentProject = project("No Project Selected",projectdate = Date(),prjDescription = "No Project selected")
            Main.taskH.taskList.clear()
            false
        }else{
            projectList.removeAt(projectIndex)
            savingNewProject()
            currentProject.projectName != "No Project Selected"

        }


    }
    fun savingNewProject() {
        pers.saving(projectList)
        println(projectList)
    }

    fun findingTheProject(projectName: String): project {
        projectList.forEach { project ->
            if (projectName == project.projectName) {
                return project
            }
        }
        return projectList[0]
    }


    fun loadingTheProject() {
        projectList = pers.loading()
        println(projectList)
        println( projectList[0].taskList )
    }

    fun selectProject(selectedProjectStr: String) {
        var projectFound = false
        for (i in projectList) {

            if (i.projectName == selectedProjectStr) {
                currentProject = i
                projectFound = true
                println(" The selected project found as current project")
                setTaskInProject()
                break
            }

        }
        //Write msg to the system console and put a warning if i doesnt print (Like an option pane)
        if (!projectFound){
            println("The Selected Project is not found")
        }
    }

}